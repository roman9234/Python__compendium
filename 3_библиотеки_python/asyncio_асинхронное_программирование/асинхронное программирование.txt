
Благодаря асинхронному программированию мы можем серьёзно увеличить скорость выполнения программ, исполняющихся на более медленных устройствах, чем CPU.

Этот урок позволит научиться на практике, как реализовывать асинхронное выполнение функций и замерять работу ваших программ.


CPU или Central Processing Unit — главная вычислительная единица, или процессор.
    Именно здесь происходят все необходимые вычисления.

SSD — энергонезависимое запоминающее устройство, использующее флеш-память для хранения информации.

Два подходара для распределения вычислительных можностей между процессами:

CPU-bound — операции, завязанные исключительно на мощности процессора.
    Для CPU-bound характерен подход, где операционная система сама принимает решение, для какого процесса сейчас нужнее временной отрезок.

I/O-bound — операции, завязанные на более медленных устройствах компьютера чем CPU, например SSD диск.
    Для I/O-bound характерен подход, где запрос, ответ на который еще не получен, не блокирует выполнение всей программы, а дает возможность начаться новому запросу.

Coroutines (ко-рутины) – функции, которые выполняются в асинхронном режиме.

Библиотека asyncio — Python модуль, содержащий в себе набор функций, которые позволяют осуществлять асинхронное выполнение функций.

Awaitable объект — объект, или функция, которые могут работать в асинхронном формате.

Состояния объектов — набор статусов, в которых может находиться объект и между которыми он может переходить.
    Задача может быть в следующих состояниях: не запущена (Pending), запущена (Running), завершена (Done) и отменена (Cancelled).
















