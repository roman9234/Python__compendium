
Что такое DevOps?

Dev - development. Разработка продукта
Ops - operations. Стабильность серверов, перенос кода в прод

Разработка постоянно хочет изменений
Эксплуатация постоянно хочет стабильности

plan - code - build - test - release - deploy - operate - monitor
Time to market - метрика. Понятие бизнеса. Обозначает то, насколько быстро функционал проходит путь от разработки до пользователей
Цель DevOps - сократить TTM без потери нефункциональных требований
Нефункциональные требования - доступность серверов, отказоусточйивость, масштабируемость, документация

DevOps это не инженерная специальность. Это культура и коллаборация людей.

DevOps появился как ответ на проблему - отсутсвие интеграции между разными стадиями разработки.
Между стадией когда код пишут и когда код деплоят.
DevOps позволяет писать код вместе, и сразу смотреть результаты командной работы.

У DevOps есть инженерная составляющая. Специалист называется site realibility engineer
Эти люди настраивают интфраструктуру, которая необходима для интеграции между Dev и Ops
Пайплайны, сервера, CD, безопасность - инженерная составляющая DevOps



---- Основные принципы DevOps ----
- тотальная, полная автоматизация. Она очень важна, так как мы боремся с bottleneck, при которых нужно вручную что-то делать
- Configuration as code. Вся конфигурация лежит в source. git Ops.
- Cloud native - позволяет реагировать на запросы рынка без создания bottleneck
- контейнеры - они позволяют лучше интегрироваться и избегать проблем с совместимостью


---- Основные понятия DevOps ----
--- CI/CD ---

Continious Integration
build - unit test - deploy to stage - acceptance tests

Continious Delivery
build - unit test - deploy to stage - acceptance tests -(manual) Deploy to production

Continious Deployment
build - unit test - deploy to stage - acceptance tests -(auto) Deploy to production


--- Инфраструктура как код ---
Enable the reconstruction of the business
from nothing but a source code repository
an application data backup, and bare metal resurces

Возможность восстановить бизнес с нуля,
имея только код репозитория, бэкап данных и ресурсы для запуска

Инфраструктура как код обозначает, что состояние всей инфраструктуры написано в коде
Настройка серверов, сокетов, установка, настройка и параметры - в коде
Скрипт может сам создавать VM, делать роли, запускать сервера
То есть инфраструктура сохранена, и её всегда можно развернуть
- цена. Разворачивать инфраструктуру из кода дешевле, так как не требуется труд работника
- скорость. Если нужно развернуть обширную инфраструктуру, можно сделать всё быстро и без вреда бизнесу
- риск. Когда мы не можем быстро развернуть новую инфраструктуру, мы рускием.
    Старая инфраструктура может не соответствовать новым требованиям, а также при разваорачивании руками, человек может ошибиться

Смысл инфраструктуры как кода
- экономия времени благодаря переиспользованию кода. один раз написали код запуска, и он всегда работает
- результат запуска на деплое всегда одинаковый и ожидаемый, не отличается от запуска к запуску
- быстрое развёртование любого проекта
- независимость от провайдеров и железа


---- Основные задачи DevOps ----
- управление ифраструктурой предприятия
- автоматизация процессов для разработки и тестирования
- сокращение времени для появления функционала у клиента


